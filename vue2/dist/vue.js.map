{"version":3,"file":"vue.js","sources":["../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/utils.js","../src/init.js","../src/gloablAPI.js","../src/index.js"],"sourcesContent":["let id = 0;\r\n\r\nclass Dep {\r\n  constructor() {\r\n    this.id = id++; // 属性的 dep 要收集 watcher\r\n    this.subs = []; // 这里存放着当前属性对应的watcher有哪些\r\n  }\r\n  depend() {\r\n    // 这里我们不希望放置重复的 watcher 而且刚才只是一个单向的关系 dep -> watcher\r\n    // watcher 记录 dep\r\n    // this.subs.push(Dep.target);\r\n\r\n    Dep.target.addDep(this); // 让 watcher 记住 dep\r\n\r\n    // dep 和 watcher 是一个多对多的关系（一个属性可以在多个组件中使用 dep -> 多个 watcher）\r\n    // 一个组件中由多个属性组成（一个watcher 对应多个dep）\r\n  }\r\n  addSub(watcher) {\r\n    this.subs.push(watcher);\r\n  }\r\n  notify() {\r\n    this.subs.forEach(watcher => watcher.update()); // 告诉 watcher 更新\r\n  }\r\n}\r\nDep.target = null;\r\n\r\nexport default Dep;","import Dep from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\n// 1）当我们创建渲染 watcher 的时候我们会把当前的渲染的 watcher 放到 dep.target 上\r\n// 2）调用 _render() 会取值 走到get上\r\n\r\n// 每个属性有一个 dep（属性计算被观察者），watcher 就是观察者（属性变化了会通知观察着更新）-> 观察者模式\r\n\r\nclass Watcher { // 不同组件有不同的 watcher  目前只有一个 渲染根实例的\r\n  constructor(vm, fn, options) {\r\n    this.id = id++;\r\n    this.renderWatcher = options; // 是一个渲染 watcher\r\n    this.getter = fn; // getter 意味着调用这个函数可以发生取值操作\r\n    this.deps = []; // 后续我们实现计算属性，和一些清理工作需要用到\r\n    this.depsId = new Set()\r\n    this.get();\r\n  }\r\n  get() {\r\n    Dep.target = this; // 静态属性就是只有一份\r\n    this.getter(); // 会去 vm 取值\r\n    Dep.target = null; // 渲染完成后就清空\r\n  }\r\n  addDep(dep) { // 一个组件对应着多个属性，重复的属性也不用记录\r\n    let id = dep.id;\r\n    if (!this.depsId.has(id)) {\r\n      this.deps.push(dep);\r\n      this.depsId.add(id);\r\n      dep.addSub(this); // watcher 已经记住了dep 而且去重了，此时让 dep 也记住 watcher\r\n    }\r\n  }\r\n  update() {\r\n    queueWatcher(this); // 把当前的 watcher 暂存起来\r\n    // this.get(); // 重新渲染\r\n  }\r\n  run() {\r\n    this.get()\r\n  }\r\n}\r\n\r\nlet queue = []\r\nlet has = {};\r\nlet pending = false; // 防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n  let flushQueue = queue.slice(0)\r\n  queue = [];\r\n  has = {};\r\n  pending = false;\r\n  flushQueue.forEach(q => q.run()); // 在刷新的过程中可能还要新的watcher 重新放到 queue 中\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n  const id = watcher.id;\r\n  if (!has[id]) {\r\n    queue.push(watcher)\r\n    has[id] = true;\r\n\r\n    // 不管 update 执行多少次，但最终只执行一轮刷新操作\r\n    if (!pending) {\r\n      nextTick(flushSchedulerQueue);\r\n      pending = true;\r\n    }\r\n  }\r\n}\r\n\r\nlet callback = [];\r\nlet waiting = false;\r\nfunction flushCallBack() {\r\n  let cbs = callback.slice(0);\r\n  waiting = false;\r\n  callback = [];\r\n  cbs.forEach(cb => cb()); // 按照顺序依次执行\r\n}\r\n\r\n// nextTick 没有使用某个 api 而是采用优雅降级的方式\r\n// 内部先采用的是 promise （ie不兼容） MutationObserve(h5) 可以考虑 ie 专享的 setTmmediate setTimeout\r\n\r\nlet timerFuc;\r\nif (Promise) {\r\n  timerFuc = (cb) => {\r\n    Promise.resolve().then(flushCallBack)\r\n  }\r\n} else if (MutationObserver) {\r\n  let observe = new MutationObserver(flushCallBack) // 这里传入的回调是异步执行的\r\n  let textNode = document.createTextNode(1);\r\n  observe.observe(textNode, {\r\n    characterData: true\r\n  })\r\n  timerFuc = () => {\r\n    textNode.textContent = 2;\r\n  }\r\n} else if (setTmmediate) {\r\n  setImmediate(flushCallBack);\r\n} else {\r\n  timerFuc = () => {\r\n    setTimeout(flushCallBack);\r\n  }\r\n}\r\n\r\nexport function nextTick(cb) { // 先内部还是先用户？\r\n  callback.push(cb); // 维护 nextTick 中的 callback 方法\r\n  if (!waiting) {\r\n    timerFuc();\r\n    waiting = true;\r\n  }\r\n}\r\n\r\n// 需要给每个属性增加一个 dep，目的就是收集 watcher\r\n\r\n// 一个组件中 n 个属性，对应一个视图，n 个 dep 对应一个 watcher\r\n// 一个属性对应着多个组件，一个dep对应多个watcher\r\n// 多对多\r\n\r\nexport default Watcher;","\r\n// h() _c()\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n  if(data == null) {\r\n    data = {}\r\n  }\r\n  let key = data.key;\r\n  if (key) delete data.key\r\n  return vnode(vm, tag, key, data, children)\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n// ast 做的是语法层面的转换，描述的是语法本身（描述js，css，html）\r\n// 虚拟DOM描述的是dom元素，可以增加一下自定义属性（描述DOM）\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text\r\n  }\r\n}","import Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom\";\r\n\r\nfunction createElm(vnode) {\r\n  let { tag, data, children, text } = vnode;\r\n  if (typeof tag === 'string') { // 标签\r\n    vnode.el = document.createElement(tag); // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\r\n\r\n    patchProps(vnode.el, data);\r\n\r\n    children.forEach(child => {\r\n      vnode.el.appendChild(createElm(child));\r\n    })\r\n  } else {\r\n    vnode.el = document.createTextNode(text);\r\n  }\r\n  return vnode.el;\r\n}\r\n\r\nfunction patchProps(el, props) {\r\n  for (let key in props) {\r\n    if (key === 'style') {\r\n      for (let styleName in props.style) {\r\n        el.style[styleName] = props.style[styleName];\r\n      }\r\n    } else {\r\n      el.setAttribute(key, props[key])\r\n    }\r\n  }\r\n}\r\n\r\nfunction patch(oldVNode, vnode) {\r\n  // 写的是初渲染流程\r\n\r\n  const isRealElement = oldVNode.nodeType;\r\n  if (isRealElement) {\r\n    const elm = oldVNode; // 获取真实元素\r\n    const parentElm = elm.parentNode; // 拿到父元素\r\n    let newElm = createElm(vnode)\r\n    parentElm.insertBefore(newElm, elm.nextSibling)\r\n    parentElm.removeChild(elm); // 删除老节点\r\n\r\n    return newElm;\r\n  } else {\r\n    // diff 算法\r\n  }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n  Vue.prototype._update = function (vnode) { // 将vnode转换为真实DOM\r\n    const vm = this;\r\n    const el = vm.$el;\r\n    // patch 既有初始化的功能 又有更新的逻辑\r\n    vm.$el = patch(el, vnode);\r\n  }\r\n\r\n  // _c('div', {}, children)\r\n  Vue.prototype._c = function () {\r\n    return createElementVNode(this, ...arguments);\r\n  }\r\n  // _v(text)\r\n  Vue.prototype._v = function () {\r\n    return createTextVNode(this, ...arguments)\r\n  }\r\n  // _s(name) === {{name}}\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value !== 'object') return value;\r\n    return JSON.stringify(value);\r\n  }\r\n  Vue.prototype._render = function () {\r\n    const vm = this;\r\n    // 让 with 中的 this 指向 vm\r\n    // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\r\n    return vm.$options.render.call(vm); // 通过 ast 语法转义后生成的 render 方法\r\n  }\r\n}\r\n\r\n\r\nexport function mountComponent(vm, el) { // 这里的 el 是通过 querySelector 处理过的\r\n  vm.$el = el;\r\n\r\n  // 1. 调用 render 方法产生虚拟节点 虚拟 DOM\r\n\r\n  const updateComponent = () => {\r\n    vm._update(vm._render()); // vm.$options.render() 虚拟节点\r\n  }\r\n\r\n  new Watcher(vm, updateComponent, true) // true 用于标识是一个渲染过程\r\n\r\n  // 2. 根据虚拟DOM产生真实DOM\r\n\r\n  // 3. 插入到el元素中\r\n}\r\n\r\n// vue 核心流程 1） 创造了响应式数据 2）模板转换成ast语法树\r\n// 3）将ast语法树转换成 render 函数\r\n// 4）后续每次数据更新可以只执行render函数 （无需再次执行ast转化的过程）\r\n// render函数会去产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点创造真实DOM\r\n\r\nexport function callHook(vm, hook) { // 调用钩子函数\r\n  const handlers = vm.$options[hook]\r\n  if (handlers) {\r\n    handlers.forEach(handler => handler.call(vm))\r\n  }\r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n// vue3 采用的不是使用正则\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) { // html 最开始肯定是一个 <div></div>\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  const stack = []; // 用于存放元素的\r\n  let currentParent; // 指向的是栈中的最后一个\r\n  let root;\r\n  // 最终需要转化成一颗抽象语法树\r\n\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag: tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    }\r\n  }\r\n\r\n  // 利用栈型结构 来构造一棵树\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs); // 创造一个 ast 节点\r\n    if (!root) root = node; // 如果为空就当成树的根节点\r\n\r\n    if (currentParent) {\r\n      node.parent = currentParent; // 只赋予了 parent 属性\r\n      currentParent.children.push(node); // 还要让父亲记住自己\r\n    }\r\n\r\n    stack.push(node);\r\n    currentParent = node; // currentParent 为栈中的最后一个\r\n\r\n  }\r\n  function chars(text) { // 文本直接放到当前指向的节点\r\n    text = text.replace(/\\s/g, ''); // 如果空格超过 2 个就删除2个以上的\r\n    text && currentParent.children.push({\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent,\r\n    })\r\n  }\r\n  function end(tag) {\r\n    let node = stack.pop(); // 弹出最后一个，校验标签是否合法\r\n    currentParent = stack[stack.length - 1];\r\n  }\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: []\r\n      }\r\n      advance(start[0].length)\r\n      // 如果不是开始标签的结束 就一直匹配下去\r\n      let attr, end;\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5] || true\r\n        })\r\n      }\r\n      if (end) {\r\n        advance(end[0].length);\r\n      }\r\n      return match;\r\n    }\r\n\r\n    return false; // 不是开始标签\r\n  }\r\n  while (html) {\r\n    // 如果 textEnd 为0 说明是一个开始标签或者结束标签\r\n    // 如果textEnd > 0 说明就是个文本的结束位置\r\n    let textEnd = html.indexOf('<'); // 如果 indexOf 中的索引是 0 则说明是个标签\r\n\r\n    if (textEnd == 0) {\r\n      const startTagMatch = parseStartTag();\r\n\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue;\r\n      }\r\n\r\n      let endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        end(endTagMatch[1])\r\n        continue;\r\n      }\r\n    }\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd); // 文本内容\r\n\r\n      if (text) {\r\n        chars(text);\r\n        advance(text.length); // 解析到的文本\r\n      }\r\n    }\r\n  }\r\n\r\n  return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n  let str = ''; // {name,value}\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    if (attr.name === 'style') {\r\n      let obj = {};\r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value;\r\n      })\r\n      attr.value = obj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    return codegen(node);\r\n  } else {\r\n    // 文本\r\n    let text = node.text;\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      let tokens = [];\r\n      let match;\r\n      defaultTagRE.lastIndex = 0;\r\n      let lastIndex = 0;\r\n      while (match = defaultTagRE.exec(text)) {\r\n        let index = match.index; // 匹配的位置\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n\r\n        lastIndex = index + match[0].length;\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n  return children.map(child => gen(child))\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children);\r\n  let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `, ${children}` : ''\r\n    })`\r\n  return code;\r\n}\r\n\r\n\r\n// 对模板进行编译\r\nexport function compileToFunction(template) {\r\n\r\n  // 1. 就是将 template 转化成 ast 语法树\r\n  let ast = parseHTML(template);\r\n  // 2. 生成 render 方法（render方法执行后的返回值的结果就是虚拟 dom）\r\n\r\n  // 模板引擎的实现原理 就是 with + new Function\r\n\r\n\r\n  let code = codegen(ast)\r\n  code = `with(this){return ${code}}`\r\n  let render = new Function(code); // 根据代码生成 render 函数\r\n  return render;\r\n}","// 我们希望重写数组中的部分方法\r\n\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto;\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [ // 找到所有的变异方法\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'revese',\r\n  'sort',\r\n  'splice'\r\n] // concat slice 都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n  newArrayProto[method] = function (...args) { // 这里重写了数组的方法\r\n    const result = oldArrayProto[method].call(this, ...args); // this 指向调用者 内部调用原来的方法，函数的劫持 切片编程\r\n\r\n    // 我们需要对新增的数据再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args;\r\n        break;\r\n      case 'splice':\r\n        inserted = args.slice(2);\r\n        break\r\n      default:\r\n        break;\r\n    }\r\n    if(inserted) {\r\n      // 对新增的内容再次进行观测\r\n      ob.ObserveArray(inserted);\r\n    }\r\n\r\n    // 走到这里\r\n    ob.dep.notify(); // 数组变化 通知对应的 watcher 更新组件\r\n    return result;\r\n  }\r\n})","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nclass Observe {\r\n  constructor(data) {\r\n\r\n    // 给每个对象都增加收集功能\r\n    this.dep = new Dep(); // 所有对象都要增加 dep\r\n\r\n    // 这个data 可能数组或者对象\r\n\r\n    // Object.defineProperty 只能劫持已经存在的属性（vue里面会为此单独写一些 api $set $delete）\r\n\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false, // 将__ob__变成不可枚举 （循环的时候无法获取到）\r\n    })\r\n\r\n    // data.__ob__ = this; // 给数据加了个标识 如果数据上有 __ob__ 就说明这个数据被观测过\r\n    if (Array.isArray(data)) {\r\n      // 这里我们可以重写数组中的方法 7个变异方法 是可以修改数组本身的\r\n      // 覆盖自身原型方法，优先找自身原型方法，然后去 数组原型找\r\n      data.__proto__ = newArrayProto // 需要保留数组原有的特效，并且可以重写部分方法\r\n      this.ObserveArray(data); // 如果数组中放的是对象，可以监控到对象的变化\r\n    } else {\r\n      this.walk(data);\r\n    }\r\n  }\r\n\r\n  walk(data) { // 循环对象 对属性依次劫持\r\n    // 重新定义属性\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n  } \r\n  ObserveArray(data) {\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\n// 深层次嵌套要递归，递归多了性能差，不存在的属性监控不到，存在的属性要重写方法\r\nfunction dependArray(value) {\r\n  for (let i = 0; i < value.length; i++) {\r\n    let current = value[i]\r\n    current.__ob__ && current.__ob__.dep.depend();\r\n    if (Array.isArray(current)) {\r\n      dependArray(current);\r\n    }\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) { // 闭包 属性劫持\r\n  let childOb = observe(value); // 对所有的对象都进行属性劫持 childOb.dep 用来收集依赖\r\n  let dep = new Dep(); // 每一个属性都有一个 dep\r\n  Object.defineProperty(target, key, {\r\n    get() { // 取值的时候 会执行 get\r\n      if (Dep.target) {\r\n        dep.depend(); // 让这个属性的收集器记住当前的 watcher\r\n        if (childOb) {\r\n          childOb.dep.depend(); // 让数组和对象本身也实现依赖收集\r\n\r\n          if (Array.isArray(value)) {\r\n            dependArray(value);\r\n          }\r\n        }\r\n      }\r\n      return value\r\n    },\r\n\r\n    set(newValue) { // 修改的时候 会执行 set\r\n      if (newValue === value) return;\r\n      observe(newValue)\r\n      value = newValue;\r\n      dep.notify(); // 通知更新\r\n    }\r\n  })\r\n\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n\r\n  if (typeof data !== 'object' || data == null) {\r\n    return; // 只对对象进行劫持\r\n  }\r\n\r\n  if (data.__ob__ instanceof Observe) { // 说明这个对象被代理过\r\n    return data.__ob__;\r\n  }\r\n\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\r\n\r\n  return new Observe(data);\r\n}","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options; // 获取所有的选项\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key] // vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data; // data 可能是函数和对象\r\n  data = typeof data === 'function' ? data.call(vm) : data;\r\n\r\n  vm._data = data;\r\n  // 对数据进行劫持 vue2 里采用了一个api defineProperty\r\n  observe(data)\r\n\r\n  // 将 vm._data 用 vm 来代理就可以了\r\n  for (let key in data) {\r\n    proxy(vm, '_data', key);\r\n  }\r\n}\r\n","const strats = {};\nconst LIFECYCLE = [\n    'beforeCreate',\n    'created'\n]\nLIFECYCLE.forEach(hook => {\n    strats[hook] = function (p, c) {\n        //  {} {created:function(){}}   => {created:[fn]}\n        // {created:[fn]}  {created:function(){}} => {created:[fn,fn]}\n        if (c) { // 如果儿子有 父亲有   让父亲和儿子拼在一起\n            if (p) {\n                return p.concat(c);\n            } else {\n                return [c]; // 儿子有父亲没有 ，则将儿子包装成数组\n            }\n        } else {\n            return p; // 如果儿子没有则用父亲即可\n        }\n    }\n})\n\n\n\nexport function mergeOptions(parent, child) {\n    const options = {};\n    for (let key in parent) { // 循环老的  {}\n        mergeField(key);\n    }\n    for (let key in child) { // 循环老的   {a:1}\n        if (!parent.hasOwnProperty(key)) {\n            mergeField(key);\n        }\n    }\n    function mergeField(key) {\n        // 策略模式 用策略模式减少if /else\n        if (strats[key]) {\n            options[key] = strats[key](parent[key], child[key])\n        } else {\n            // 如果不在策略中则以儿子为主\n            options[key] = child[key] || parent[key]; // 优先采用儿子，在采用父亲\n        }\n    }\n    return options;\n\n}","import { callHook, mountComponent } from './lifecycle';\r\nimport { compileToFunction } from './compiler';\r\nimport { initState } from './state';\r\nimport { mergeOptions } from './utils';\r\n\r\nexport function initMixin(Vue) { // 就是给 Vue 增加 init 方法\r\n  Vue.prototype._init = function (options) {\r\n    // vue $options 就是获取用户的配置\r\n\r\n    // 我们使用的 vue 的时候 以 $ 开头为 vue 的属性\r\n    const vm = this;\r\n\r\n    // 我们定义的全局指令和过滤器.... 都会挂载到实力上\r\n    vm.$options = mergeOptions(this.constructor.options, options); // 将用户的选项挂载到实例上\r\n\r\n    callHook(vm, 'beforeCreate') // 内部调用的是 beforeCreate 写错了就不执行了\r\n\r\n    // 初始化状态\r\n    initState(vm)\r\n    callHook(vm, 'created')\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el); // 实现数据的挂载\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    el = document.querySelector(el);\r\n    let ops = vm.$options;\r\n    if (!ops.render) { // 先进行查找有没有 render\r\n      let template; // 没有render看一下是否写了template，没写 template 采用外部的 template\r\n      if (!ops.template && el) { // 没有写模板 但是写了 el\r\n        template = el.outerHTML;\r\n      } else {\r\n        if (el) {\r\n          template = ops.template; // 如果有 el 则采用模板的内容\r\n        }\r\n      }\r\n      if (template) {\r\n        // 这里需要对模板进行编译\r\n        const render = compileToFunction(template);\r\n        ops.render = render; // jsx 最终会被编译成（'xxx'）\r\n      }\r\n    }\r\n\r\n    mountComponent(vm, el); // 组件的挂载\r\n    // 最终就可以获取 render 方法\r\n    // script 标签引用的 vue.global.js 这个编译过程是在浏览器运行的\r\n    // runtime 是不包含模板编译的，整个编译是打包的时候通过 loader 来转义，vue文件的，用runtime的时候不能使用template\r\n  }\r\n}\r\n","\r\nimport { mergeOptions } from './utils'\r\n\r\n\r\nexport function initGlobalAPI(Vue) {\r\n  // 静态方法\r\n\r\n  Vue.options = {}\r\n  Vue.mixin = function (mixin) {\r\n    // 我们期望将用户的选项和 全局的options进行合并 '\r\n    this.options = mergeOptions(this.options, mixin);\r\n    return this;\r\n  }\r\n\r\n}","import { initLifeCycle } from './lifecycle';\r\nimport { initMixin } from './init'\r\nimport { nextTick } from './observe/watcher';\r\nimport { initGlobalAPI } from './gloablAPI';\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) { // options 就是用户的选项\r\n  this._init(options); // 默认就调用了 init\r\n}\r\n\r\nVue.prototype.$nextTick = nextTick;\r\n \r\n\r\ninitMixin(Vue); // 扩展了 init 方法\r\ninitLifeCycle(Vue);\r\ninitGlobalAPI(Vue)\r\n\r\n\r\nexport default Vue;"],"names":["id","Dep","constructor","subs","depend","target","addDep","addSub","watcher","push","notify","forEach","update","Watcher","vm","fn","options","renderWatcher","getter","deps","depsId","Set","get","dep","has","add","queueWatcher","run","queue","pending","flushSchedulerQueue","flushQueue","slice","q","nextTick","callback","waiting","flushCallBack","cbs","cb","timerFuc","Promise","resolve","then","MutationObserver","observe","textNode","document","createTextNode","characterData","textContent","setTmmediate","setImmediate","setTimeout","createElementVNode","tag","data","children","key","vnode","createTextVNode","text","undefined","createElm","el","createElement","patchProps","child","appendChild","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","prototype","_update","$el","_c","arguments","_v","_s","value","JSON","stringify","_render","$options","render","call","mountComponent","updateComponent","callHook","hook","handlers","handler","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","attrs","type","parent","start","node","chars","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","item","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","Function","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","result","inserted","ob","__ob__","ObserveArray","Observe","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArray","current","childOb","set","newValue","initState","opts","initData","proxy","_data","strats","LIFECYCLE","p","c","concat","mergeOptions","mergeField","hasOwnProperty","initMixin","_init","$mount","querySelector","ops","outerHTML","initGlobalAPI","mixin","$nextTick"],"mappings":"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"}