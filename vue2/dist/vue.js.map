{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n// vue3 采用的不是使用正则\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) { // html 最开始肯定是一个 <div></div>\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  const stack = []; // 用于存放元素的\r\n  let currentParent; // 指向的是栈中的最后一个\r\n  let root;\r\n  // 最终需要转化成一颗抽象语法树\r\n\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag: tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    }\r\n  }\r\n\r\n  // 利用栈型结构 来构造一棵树\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs); // 创造一个 ast 节点\r\n    if (!root) root = node; // 如果为空就当成树的根节点\r\n\r\n    if (currentParent) {\r\n      node.parent = currentParent; // 只赋予了 parent 属性\r\n      currentParent.children.push(node); // 还要让父亲记住自己\r\n    }\r\n\r\n    stack.push(node);\r\n    currentParent = node; // currentParent 为栈中的最后一个\r\n\r\n  }\r\n  function chars(text) { // 文本直接放到当前指向的节点\r\n    text = text.replace(/\\s/g, ''); // 如果空格超过 2 个就删除2个以上的\r\n    text && currentParent.children.push({\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent,\r\n    })\r\n  }\r\n  function end(tag) {\r\n    let node = stack.pop(); // 弹出最后一个，校验标签是否合法\r\n    currentParent = stack[stack.length - 1];\r\n  }\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: []\r\n      }\r\n      advance(start[0].length)\r\n      // 如果不是开始标签的结束 就一直匹配下去\r\n      let attr, end;\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5] || true\r\n        })\r\n      }\r\n      if (end) {\r\n        advance(end[0].length);\r\n      }\r\n      return match;\r\n    }\r\n\r\n    return false; // 不是开始标签\r\n  }\r\n  while (html) {\r\n    // 如果 textEnd 为0 说明是一个开始标签或者结束标签\r\n    // 如果textEnd > 0 说明就是个文本的结束位置\r\n    let textEnd = html.indexOf('<'); // 如果 indexOf 中的索引是 0 则说明是个标签\r\n\r\n    if (textEnd == 0) {\r\n      const startTagMatch = parseStartTag();\r\n\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue;\r\n      }\r\n\r\n      let endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        end(endTagMatch[1])\r\n        continue;\r\n      }\r\n    }\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd); // 文本内容\r\n\r\n      if (text) {\r\n        chars(text);\r\n        advance(text.length); // 解析到的文本\r\n      }\r\n    }\r\n  }\r\n\r\n  return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n  let str = ''; // {name,value}\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    if (attr.name === 'style') {\r\n      let obj = {};\r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value;\r\n      })\r\n      attr.obj = obj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    return codegen(node);\r\n  } else {\r\n    // 文本\r\n    let text = node.text;\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      let tokens = [];\r\n      let match;\r\n      defaultTagRE.lastIndex = 0;\r\n      let lastIndex = 0;\r\n      while (match = defaultTagRE.exec(text)) {\r\n        let index = match.index; // 匹配的位置\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n\r\n        lastIndex = index + match[0].length;\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n  return children.map(child => gen(child))\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children);\r\n  let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `, ${children}` : ''\r\n    })`\r\n  return code;\r\n}\r\n\r\n\r\n// 对模板进行编译\r\nexport function compileToFunction(template) {\r\n\r\n  // 1. 就是将 template 转化成 ast 语法树\r\n  let ast = parseHTML(template);\r\n  // 2. 生成 render 方法（render方法执行后的返回值的结果就是虚拟 dom）\r\n\r\n\r\n  console.log(codegen(ast));\r\n\r\n}","// 我们希望重写数组中的部分方法\r\n\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto;\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [ // 找到所有的变异方法\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'revese',\r\n  'sort',\r\n  'splice'\r\n] // concat slice 都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n  newArrayProto[method] = function (...args) { // 这里重写了数组的方法\r\n    const result = oldArrayProto[method].call(this, ...args); // this 指向调用者 内部调用原来的方法，函数的劫持 切片编程\r\n\r\n    // 我们需要对新增的数据再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args;\r\n        break;\r\n      case 'splice':\r\n        inserted = args.slice(2);\r\n        break\r\n      default:\r\n        break;\r\n    }\r\n    if(inserted) {\r\n      // 对新增的内容再次进行观测\r\n      ob.ObserveArray(inserted);\r\n    }\r\n    return result;\r\n  }\r\n})","import { newArrayProto } from \"./array\";\r\n\r\nclass Observe {\r\n  constructor(data) {\r\n    // Object.defineProperty 只能劫持已经存在的属性（vue里面会为此单独写一些 api $set $delete）\r\n\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false, // 将__ob__变成不可枚举 （循环的时候无法获取到）\r\n    })\r\n\r\n    // data.__ob__ = this; // 给数据加了个标识 如果数据上有 __ob__ 就说明这个数据被观测过\r\n    if (Array.isArray(data)) {\r\n      // 这里我们可以重写数组中的方法 7个变异方法 是可以修改数组本身的\r\n      // 覆盖自身原型方法，优先找自身原型方法，然后去 数组原型找\r\n      data.__proto__ = newArrayProto // 需要保留数组原有的特效，并且可以重写部分方法\r\n      this.ObserveArray(data); // 如果数组中放的是对象，可以监控到对象的变化\r\n    } else {\r\n      this.walk(data);\r\n    }\r\n  }\r\n\r\n  walk(data) { // 循环对象 对属性依次劫持\r\n    // 重新定义属性\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n  }\r\n  ObserveArray(data) {\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\n\r\nexport function defineReactive(target, key, value) { // 闭包 属性劫持\r\n  observe(value); // 对所有的对象都进行属性劫持\r\n  Object.defineProperty(target, key, {\r\n    get() { // 取值的时候 会执行 get\r\n      return value\r\n    },\r\n\r\n    set(newValue) { // 修改的时候 会执行 set\r\n      if (newValue === value) return;\r\n      observe(newValue)\r\n      value = newValue;\r\n    }\r\n  })\r\n\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n\r\n  if (typeof data !== 'object' || data == null) {\r\n    return; // 只对执行进行劫持\r\n  }\r\n  \r\n  if(data.__ob__ instanceof Observe) { // 说明这个对象被代理过\r\n    return data.__ob__;\r\n  }\r\n\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\r\n\r\n  return new Observe(data);\r\n}","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options; // 获取所有的选项\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key] // vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data; // data 可能是函数和对象\r\n  data = typeof data === 'function' ? data.call(vm) : data;\r\n\r\n  vm._data = data;\r\n  // 对数据进行劫持 vue2 里采用了一个api defineProperty\r\n  observe(data)\r\n\r\n  // 将 vm._data 用 vm 来代理就可以了\r\n  for (let key in data) {\r\n    proxy(vm, '_data', key);\r\n  }\r\n}\r\n","import { compileToFunction } from './compiler';\r\nimport { initState } from './state';\r\n\r\nexport function initMixin(Vue) { // 就是给 Vue 增加 init 方法\r\n  Vue.prototype._init = function (options) {\r\n    // vue $options 就是获取用户的配置\r\n\r\n    // 我们使用的 vue 的时候 以 $ 开头为 vue 的属性\r\n    const vm = this;\r\n    vm.$options = options; // 将用户的选项挂载到实例上\r\n\r\n    // 初始化状态\r\n    initState(vm)\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el); // 实现数据的挂载\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    el = document.querySelector(el);\r\n    let ops = vm.$options;\r\n    if (!ops.render) { // 先进行查找有没有 render\r\n      let template; // 没有render看一下是否写了template，没写 template 采用外部的 template\r\n      if (!ops.template && el) { // 没有写模板 但是写了 el\r\n        template = el.outerHTML;\r\n      } else {\r\n        if (el) {\r\n          template = ops.template; // 如果有 el 则采用模板的内容\r\n        }\r\n      }\r\n      if (template) {\r\n        // 这里需要对模板进行编译\r\n        const render = compileToFunction(template);\r\n        ops.render = render; // jsx 最终会被编译成（'xxx'）\r\n      }\r\n    }\r\n\r\n    ops.render; // 最终就可以获取 render 方法\r\n\r\n    // script 标签引用的 vue.global.js 这个编译过程是在浏览器运行的\r\n    // runtime 是不包含模板编译的，整个编译是打包的时候通过 loader 来转义，vue文件的，用runtime的时候不能使用template\r\n  }\r\n}\r\n","import { initMixin } from './init'\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) { // options 就是用户的选项\r\n  this._init(options); // 默认就调用了 init\r\n}\r\n\r\ninitMixin(Vue); // 扩展了 init 方法\r\n\r\nexport default Vue;"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","console","log","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","args","result","call","inserted","ob","__ob__","ObserveArray","Observe","constructor","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","target","get","set","newValue","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":"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"}